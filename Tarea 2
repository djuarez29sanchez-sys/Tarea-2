import numpy as np

def rot_x(x: float, y: float, z: float, theta: float) -> np.ndarray:
    '''
    Descripcion

    Parameters:
        param_name (data_type): brief description
        param_name (data_type): brief description

    Returns:
        data_type: brief description
    '''
  
    p = np.array([x, y, z])
    R = np.array([
        [1, 0, 0],
        [0, np.cos(theta), -np.sin(theta)],
        [0, np.sin(theta),  np.cos(theta)]
    ])
    
    return R @ p

def rot_y(x: float, y: float, z: float, theta: float) -> np.ndarray:
    
    '''
    Descripcion

    Parameters:
        param_name (data_type): brief description
        param_name (data_type): brief description

    Returns:
        data_type: brief description
    '''
    p = np.array([x, y, z])
    R = np.array([
        [np.cos(theta), 0, np.sin(theta)],
        [0, 1, 0],
        [-np.sin(theta), 0, np.cos(theta)]
    ])

    return R @ p

def rot_z(x: float, y: float, z: float, theta: float) -> np.ndarray:
    '''
    Descripcion

    Parameters:
        param_name (data_type): brief description
        param_name (data_type): brief description

    Returns:
        data_type: brief description
    '''
 
    p = np.array([x, y, z])
    R = np.array([
        [np.cos(theta), -np.sin(theta), 0],
        [np.sin(theta),  np.cos(theta), 0],
        [0, 0, 1]
    ])

    return R @ p

def rotar(x: float, y: float, z: float, theta: float, axis: str) -> np.ndarray:
    
    '''
    DescripcionS

    Parameters:
        param_name (data_type): brief description
        param_name (data_type): brief description
        param_name (data_type): brief description
        param_name (data_type): brief description
        axis (string): eje de rotacion; puede tomar valor 'x', 'y' o 'z'.

    Returns:
        data_type: brief description
    '''
  
    axis = axis.lower()

    if axis == 'x':
        return rot_x(x, y, z, theta)
    elif axis == 'y':
        return rot_y(x, y, z, theta)
    elif axis == 'z':
        return rot_z(x, y, z, theta)

'''
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))
z = float(input("Coordenada Z: "))

ang = float(input("Ingrese el ángulo de rotación (en grados): "))
theta = np.radians(ang)

axis = input("Ingrese el eje que quiere rotar (x, y o z): ")

nuevo_vector = rotar(x, y, z, theta, axis)

print("El punto original era:", x, y, z)
print("Ángulo de rotación:", ang, "° sobre el eje", axis.upper())
print("El punto rotado es:", round(nuevo_vector[0], 2), round(nuevo_vector[1], 2),round(nuevo_vector[2], 2))
'''
